{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\lidde\\\\Documents\\\\MOOC Full Stack Course\\\\part2\\\\notes\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lidde\\\\Documents\\\\MOOC Full Stack Course\\\\part2\\\\notes\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showAll = _useState6[0],\n        setShowAll = _useState6[1];\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/notes').then(response => {\n      setNotes(response.data);\n    });\n  }, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    axios.post('http://localhost:3001/notes', noteObject).then(response => {\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const toggleImportanceOf = id => {\n    console.log('importance of ' + id + ' needs to be toggled');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all')), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, notesToShow.map((note, i) => React.createElement(Note, {\n    key: i,\n    note: note,\n    toggleImportance: () => toggleImportanceOf(note.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/lidde/Documents/MOOC Full Stack Course/part2/notes/src/App.js"],"names":["React","useState","useEffect","axios","Note","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","get","then","response","data","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","id","length","post","concat","handleNoteChange","target","value","notesToShow","filter","note","toggleImportanceOf","console","log","map","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Note from './components/Note'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:3001/notes')\r\n      .then(response => {\r\n        setNotes(response.data)\r\n      })\r\n  }, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n\r\n    axios\r\n    .post('http://localhost:3001/notes', noteObject)\r\n    .then(response => {\r\n      setNotes(notes.concat(response.data))\r\n      setNewNote('')\r\n    })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    console.log('importance of ' + id + ' needs to be toggled')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note, i) =>\r\n          <Note\r\n          key={i}\r\n          note={note}\r\n          toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}