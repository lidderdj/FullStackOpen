{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lidde\\\\Documents\\\\MOOC Full Stack Course\\\\part1\\\\unicaf\\\\unicaf\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Statistics = props => {\n  const average = (Ratings.good * 1 + Ratings.bad * -1) / all;\n  const positive = Ratings.good / all * 100;\n  const all = Ratings.good + Ratings.neutral + Ratings.bad;\n};\n\nconst App = () => {\n  // save clicks of each button to own state\n  const Ratings = props => {\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Give Feedback\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => Ratings.setGood(Ratings.good + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, \"good\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => Ratings.setNeutral(Ratings.neutral + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"neutral\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => Ratings.setBad(Ratings.bad + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"bad\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, \"Statistics\"), \"Good = \", Ratings.good, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }), \"Neutral = \", Ratings.neutral, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 31\n    }\n  }), \"Bad = \", Ratings.bad, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }), \"All = \", Statistics.all, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 26\n    }\n  }), \"Average = \", Statistics.average, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 34\n    }\n  }), \"Positive = \", Statistics.positive, \"%\");\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/lidde/Documents/MOOC Full Stack Course/part1/unicaf/unicaf/src/index.js"],"names":["React","useState","ReactDOM","Statistics","props","average","Ratings","good","bad","all","positive","neutral","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC7B,QAAMC,OAAO,GAAG,CAAEC,OAAO,CAACC,IAAR,GAAa,CAAd,GAAkBD,OAAO,CAACE,GAAR,GAAY,CAAC,CAAhC,IAAoCC,GAApD;AACE,QAAMC,QAAQ,GAAIJ,OAAO,CAACC,IAAR,GAAaE,GAAd,GAAmB,GAApC;AACF,QAAMA,GAAG,GAAGH,OAAO,CAACC,IAAR,GAAaD,OAAO,CAACK,OAArB,GAA6BL,OAAO,CAACE,GAAjD;AACA,CAJD;;AAMA,MAAMI,GAAG,GAAG,MAAM;AAChB;AAEF,QAAMN,OAAO,GAAIF,KAAD,IAAW;AACzB,UAAM,CAACG,IAAD,EAAOM,OAAP,IAAkBZ,QAAQ,CAAC,CAAD,CAAhC;AACA,UAAM,CAACU,OAAD,EAAUG,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;AACA,UAAM,CAACO,GAAD,EAAMO,MAAN,IAAgBd,QAAQ,CAAC,CAAD,CAA9B;AACD,GAJD;;AAME,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEI;AAAQ,IAAA,OAAO,EAAE,MAAMK,OAAO,CAACO,OAAR,CAAgBP,OAAO,CAACC,IAAR,GAAe,CAA/B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAMD,OAAO,CAACQ,UAAR,CAAmBR,OAAO,CAACK,OAAR,GAAkB,CAArC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,eAII;AAAQ,IAAA,OAAO,EAAE,MAAML,OAAO,CAACS,MAAR,CAAeT,OAAO,CAACE,GAAR,GAAc,CAA7B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,eAKD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALC,aAMMF,OAAO,CAACC,IANd,oBAMoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANpB,gBAOSD,OAAO,CAACK,OAPjB,oBAO0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAP1B,YAQKL,OAAO,CAACE,GARb,oBAQkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARlB,YASKL,UAAU,CAACM,GAThB,oBASqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATrB,gBAUSN,UAAU,CAACE,OAVpB,oBAU6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAV7B,iBAWUF,UAAU,CAACO,QAXrB,MADF;AAeD,CAxBD;;AA0BAR,QAAQ,CAACc,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Statistics = (props) => {\n\tconst average = ((Ratings.good*1)+(Ratings.bad*-1))/all\n  \tconst positive = (Ratings.good/all)*100\n\tconst all = Ratings.good+Ratings.neutral+Ratings.bad\n}\n\nconst App = () => {\n  // save clicks of each button to own state\n\nconst Ratings = (props) => {\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\t\n}\n\n  return (\n    <div>\n      <h1>Give Feedback</h1>\n        <button onClick={() => Ratings.setGood(Ratings.good + 1)}>good</button>\n        <button onClick={() => Ratings.setNeutral(Ratings.neutral + 1)}>neutral</button>  \n        <button onClick={() => Ratings.setBad(Ratings.bad + 1)}>bad</button>  \n\t  <h1>Statistics</h1>\n\t\tGood = {Ratings.good} <br/>\n\t\tNeutral = {Ratings.neutral} <br/>\n\t\tBad = {Ratings.bad} <br/>\n\t\tAll = {Statistics.all} <br/>\n\t\tAverage = {Statistics.average} <br/>\n\t\tPositive = {Statistics.positive}%\n    </div>\n  )\n}\n\nReactDOM.render(<App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}